expr : KEYWORD:VAR IDENTIFIER EQUALS expr
     :comparation-expression ((KEYWORD: AND | OR) comparation-expression)*
     
comparation-expression : NOT comparation-expression
                       :arithmetical-expression ((EQUALSEQUALS|LESSTHAN|LESS THAN EQUALS| GREATER THAN EQUALS) arithmetical-expression)*
     

arithmetical-expression : term((PLIS|MINUS) term)*
     

term : factor ((MUL|DIV) factor)*

factor : INT|FLOAT
        : (+|-) factor
        ( expr )
expo: atom (POW  factor)*

atom : (+|- | IDENTIFIER)
     : ( expr )
     :if-expression
     :for-expression
     :while-expression
     :funcion-expression


//structures
if-expression : KEYWORD: IF expression KEYWORD: THEN  expression
                (KEYWORD:ELIF expression KEYWORD: THEN expression)*
                (KEYWORD: ELSE expression)?
for-expression: KEYWORD:FOR IDENTIFIER EQUALS expression KEYWORD: TO expression
                (KEYWORD:STEP expression)? KEYWORD:THEN expression



FOR <var-name> = <start_value> TO <end-value> THEN <expression>
ej: FOR i = 0 TO 10 THEN result = result*1
    FOR i = 0 TO 10 STEP 2 THEN... 

WHILE <condition> THEN <expression>

while-expression: KEYWORD:WHILE expression KEYWORD:THEN expression  


funcion-definition  :KEYWORD:FUN IDENTIFIER?
                    :LPAREN (IDENTIFIER ( COMMA IDENTIFIER)*)? RPAREN
                    ARROW expression
rule